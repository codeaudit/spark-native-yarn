description = 'Native YARN/Tez port for Spark'
group = 'org.apache.spark.tez'

ext {
	junitVersion = '4.8.2'
	log4jVersion = '1.2.12'
	slf4jVersion = '1.7.2'
	hadoopVersion = '2.6.0'
	scalaVersion = '2.10.4'
	sparkVersion = '1.2.1'
	tezVersion = '0.5.2.2.2.0.0-2041'
	mockitoVersion = '1.8.4'
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'maven-publish'

mainClassName="org.apache.spark.tez.Main"

sourceCompatibility=1.6
targetCompatibility=1.6

sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []
sourceSets.test.scala.srcDir "src/test/java"
sourceSets.test.java.srcDirs = []

publishing {
        publications {
            maven(MavenPublication) {
                groupId 'org.apache.spark.tez'
                artifactId 'spark-native-yarn'
                version '0.1-PREVIEW-1.2'
                from components.java
                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
    
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    from sourceSets.main.allScala
}

repositories {
   mavenLocal();
    mavenCentral()
    maven { url 'http://repo.hortonworks.com/content/repositories/releases/' }
}

configurations {
	   	all*.exclude group: "com.jcraft", module: "jsch"
		all*.exclude group: "org.apache.hadoop", module: "hadoop-yarn-server-common"
		all*.exclude group: "org.apache.hadoop", module: "hadoop-yarn-server-web-proxy"
		all*.exclude group: "com.google.inject", module: "guice"
		all*.exclude group: "com.google.inject.extensions", module: "guice-servlet"
		all*.exclude group: "com.google.code.findbugs", module: "jsr305"
		//all*.exclude group: "org.apache.avro", module: "avro"
		//all*.exclude group: "org.xerial.snappy", module: "snappy-java"
		all*.exclude group: "com.thoughtworks.paranamer", module: "paranamer"
		all*.exclude group: "net.java.dev.jets3t", module: "jets3t"
		all*.exclude group: "org.apache.httpcomponents", module: "httpclient"
		all*.exclude group: "org.apache.httpcomponents", module: "httpcore"
		all*.exclude group: "com.jamesmurty.utils", module: "java-xmlbuilder"
		all*.exclude group: "javax.servlet.jsp", module: "jsp-api"
		all*.exclude group: "javax.servlet", module: "servlet-api"
		all*.exclude group: "tomcat", module: "jasper-runtime"
		all*.exclude group: "tomcat", module: "jasper-compiler"
		all*.exclude group: "org.mortbay.jetty", module: "jetty"
		all*.exclude group: "org.mortbay.jetty", module: "jetty-util"
		all*.exclude group: "xmlenc", module: "xmlenc"
		all*.exclude group: "org.tukaani", module: "xz"
		all*.exclude group: "asm", module: "asm"	
		all*.exclude group: "org.codehaus.jackson", module: "jackson-core-asl"
		all*.exclude group: "org.codehaus.jackson", module: "jackson-mapper-asl"
		//all*.exclude group: "org.codehaus.jettison", module: "jettison"
		all*.exclude group: "javax.xml.stream", module: "stax-api"
		all*.exclude group: "javax.xml.bind", module: "jaxb-api"
		all*.exclude group: "commons-el", module: "commons-el"
		all*.exclude group: "commons-daemon", module: "commons-daemon"
		all*.exclude group: "commons-httpclient", module: "commons-httpclient"
		all*.exclude group: "commons-beanutils", module: "commons-beanutils-core"
		all*.exclude group: "commons-digester", module: "commons-digester"
		all*.exclude group: "org.apache.commons", module: "commons-compress"
	}

dependencies {
	compile "org.scala-lang:scala-compiler:$scalaVersion"
	compile "org.scala-lang:scala-library:$scalaVersion"
	
	compile ("org.apache.spark:spark-core_2.10:$sparkVersion") {
		exclude group: 'org.apache.hadoop'
		exclude group: 'com.google.guava'
	}
	compile ("org.apache.spark:spark-mllib_2.10:$sparkVersion") {
		exclude group: 'org.apache.hadoop'
		exclude group: 'com.google.guava'
	}
	runtime ("org.apache.spark:spark-repl_2.10:$sparkVersion") {
		exclude group: 'org.apache.hadoop'
		exclude group: 'org.apache.spark'
		exclude group: 'com.google.guava'
	}
	compile ("org.apache.tez:tez-common:$tezVersion") {
		exclude group: 'com.google.guava'
	}
	compile ("org.apache.tez:tez-dag:$tezVersion") {
		exclude group: 'com.google.guava'
	}
	compile ("org.apache.tez:tez-mapreduce:$tezVersion") {
		exclude group: 'com.google.guava'
	}
	compile ("org.apache.hadoop:hadoop-hdfs:$hadoopVersion") {
		exclude group: 'com.google.guava'
	}
	compile ("org.apache.hadoop:hadoop-common:$hadoopVersion") {
		exclude group: 'com.google.guava'
	}
	
	compile "com.google.guava:guava:14.0.1"
	
	compile "javassist:javassist:3.12.1.GA"
        compile "org.codehaus.jackson:jackson-core-asl:1.9.5"
        compile "org.codehaus.jackson:jackson-xc:1.9.5"
        compile "org.codehaus.jackson:jackson-jaxrs:1.9.5"
        compile "com.sun.jersey:jersey-client:1.9"
        compile "com.sun.jersey:jersey-json:1.9"

        testCompile "org.scalanlp:breeze_2.10:0.9"
	testCompile "junit:junit-dep:$junitVersion"
	testCompile "org.mockito:mockito-all:$mockitoVersion"
}

compileScala {
	compileScala.scalaCompileOptions.additionalParameters= ['-feature']
	compileScala.scalaCompileOptions.additionalParameters= ['-language:existentials']
}

compileTestScala {
	compileTestScala.scalaCompileOptions.additionalParameters= ['-feature']
	compileTestScala.scalaCompileOptions.additionalParameters= ['-language:reflectiveCalls']
}

applicationDistribution.from('mini-clust-conf') {
    into "/conf"
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
}
